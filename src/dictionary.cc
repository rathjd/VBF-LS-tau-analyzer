//
// File generated by rootcint at Thu Nov  5 00:45:27 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIdictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dictionary.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void itreestream_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void itreestream_Dictionary();
   static void *new_itreestream(void *p = 0);
   static void *newArray_itreestream(Long_t size, void *p);
   static void delete_itreestream(void *p);
   static void deleteArray_itreestream(void *p);
   static void destruct_itreestream(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::itreestream*)
   {
      ::itreestream *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::itreestream),0);
      static ::ROOT::TGenericClassInfo 
         instance("itreestream", "./include/treestream.h", 152,
                  typeid(::itreestream), DefineBehavior(ptr, ptr),
                  0, &itreestream_Dictionary, isa_proxy, 0,
                  sizeof(::itreestream) );
      instance.SetNew(&new_itreestream);
      instance.SetNewArray(&newArray_itreestream);
      instance.SetDelete(&delete_itreestream);
      instance.SetDeleteArray(&deleteArray_itreestream);
      instance.SetDestructor(&destruct_itreestream);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::itreestream*)
   {
      return GenerateInitInstanceLocal((::itreestream*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::itreestream*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void itreestream_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::itreestream*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void otreestream_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void otreestream_Dictionary();
   static void *new_otreestream(void *p = 0);
   static void *newArray_otreestream(Long_t size, void *p);
   static void delete_otreestream(void *p);
   static void deleteArray_otreestream(void *p);
   static void destruct_otreestream(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::otreestream*)
   {
      ::otreestream *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::otreestream),0);
      static ::ROOT::TGenericClassInfo 
         instance("otreestream", "./include/treestream.h", 367,
                  typeid(::otreestream), DefineBehavior(ptr, ptr),
                  0, &otreestream_Dictionary, isa_proxy, 0,
                  sizeof(::otreestream) );
      instance.SetNew(&new_otreestream);
      instance.SetNewArray(&newArray_otreestream);
      instance.SetDelete(&delete_otreestream);
      instance.SetDeleteArray(&deleteArray_otreestream);
      instance.SetDestructor(&destruct_otreestream);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::otreestream*)
   {
      return GenerateInitInstanceLocal((::otreestream*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::otreestream*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void otreestream_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::otreestream*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void eventBuffer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void eventBuffer_Dictionary();
   static void *new_eventBuffer(void *p = 0);
   static void *newArray_eventBuffer(Long_t size, void *p);
   static void delete_eventBuffer(void *p);
   static void deleteArray_eventBuffer(void *p);
   static void destruct_eventBuffer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::eventBuffer*)
   {
      ::eventBuffer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::eventBuffer),0);
      static ::ROOT::TGenericClassInfo 
         instance("eventBuffer", "./include/eventBuffer.h", 23,
                  typeid(::eventBuffer), DefineBehavior(ptr, ptr),
                  0, &eventBuffer_Dictionary, isa_proxy, 0,
                  sizeof(::eventBuffer) );
      instance.SetNew(&new_eventBuffer);
      instance.SetNewArray(&newArray_eventBuffer);
      instance.SetDelete(&delete_eventBuffer);
      instance.SetDeleteArray(&deleteArray_eventBuffer);
      instance.SetDestructor(&destruct_eventBuffer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::eventBuffer*)
   {
      return GenerateInitInstanceLocal((::eventBuffer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::eventBuffer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void eventBuffer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::eventBuffer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void outputFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void outputFile_Dictionary();
   static void delete_outputFile(void *p);
   static void deleteArray_outputFile(void *p);
   static void destruct_outputFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::outputFile*)
   {
      ::outputFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::outputFile),0);
      static ::ROOT::TGenericClassInfo 
         instance("outputFile", "./include/tnm.h", 32,
                  typeid(::outputFile), DefineBehavior(ptr, ptr),
                  0, &outputFile_Dictionary, isa_proxy, 0,
                  sizeof(::outputFile) );
      instance.SetDelete(&delete_outputFile);
      instance.SetDeleteArray(&deleteArray_outputFile);
      instance.SetDestructor(&destruct_outputFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::outputFile*)
   {
      return GenerateInitInstanceLocal((::outputFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::outputFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void outputFile_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::outputFile*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void commandLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void commandLine_Dictionary();
   static void *new_commandLine(void *p = 0);
   static void *newArray_commandLine(Long_t size, void *p);
   static void delete_commandLine(void *p);
   static void deleteArray_commandLine(void *p);
   static void destruct_commandLine(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::commandLine*)
   {
      ::commandLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::commandLine),0);
      static ::ROOT::TGenericClassInfo 
         instance("commandLine", "./include/tnm.h", 51,
                  typeid(::commandLine), DefineBehavior(ptr, ptr),
                  0, &commandLine_Dictionary, isa_proxy, 0,
                  sizeof(::commandLine) );
      instance.SetNew(&new_commandLine);
      instance.SetNewArray(&newArray_commandLine);
      instance.SetDelete(&delete_commandLine);
      instance.SetDeleteArray(&deleteArray_commandLine);
      instance.SetDestructor(&destruct_commandLine);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::commandLine*)
   {
      return GenerateInitInstanceLocal((::commandLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::commandLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void commandLine_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::commandLine*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void matchedPair_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void matchedPair_Dictionary();
   static void *new_matchedPair(void *p = 0);
   static void *newArray_matchedPair(Long_t size, void *p);
   static void delete_matchedPair(void *p);
   static void deleteArray_matchedPair(void *p);
   static void destruct_matchedPair(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::matchedPair*)
   {
      ::matchedPair *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::matchedPair),0);
      static ::ROOT::TGenericClassInfo 
         instance("matchedPair", "./include/tnm.h", 64,
                  typeid(::matchedPair), DefineBehavior(ptr, ptr),
                  0, &matchedPair_Dictionary, isa_proxy, 0,
                  sizeof(::matchedPair) );
      instance.SetNew(&new_matchedPair);
      instance.SetNewArray(&newArray_matchedPair);
      instance.SetDelete(&delete_matchedPair);
      instance.SetDeleteArray(&deleteArray_matchedPair);
      instance.SetDestructor(&destruct_matchedPair);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::matchedPair*)
   {
      return GenerateInitInstanceLocal((::matchedPair*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::matchedPair*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void matchedPair_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::matchedPair*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ptThing_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ptThing_Dictionary();
   static void *new_ptThing(void *p = 0);
   static void *newArray_ptThing(Long_t size, void *p);
   static void delete_ptThing(void *p);
   static void deleteArray_ptThing(void *p);
   static void destruct_ptThing(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ptThing*)
   {
      ::ptThing *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ptThing),0);
      static ::ROOT::TGenericClassInfo 
         instance("ptThing", "./include/tnm.h", 74,
                  typeid(::ptThing), DefineBehavior(ptr, ptr),
                  0, &ptThing_Dictionary, isa_proxy, 0,
                  sizeof(::ptThing) );
      instance.SetNew(&new_ptThing);
      instance.SetNewArray(&newArray_ptThing);
      instance.SetDelete(&delete_ptThing);
      instance.SetDeleteArray(&deleteArray_ptThing);
      instance.SetDestructor(&destruct_ptThing);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ptThing*)
   {
      return GenerateInitInstanceLocal((::ptThing*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ptThing*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ptThing_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ptThing*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrapper around operator delete
   static void delete_outputFile(void *p) {
      delete ((::outputFile*)p);
   }
   static void deleteArray_outputFile(void *p) {
      delete [] ((::outputFile*)p);
   }
   static void destruct_outputFile(void *p) {
      typedef ::outputFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::outputFile

namespace ROOT {
   // Wrappers around operator new
   static void *new_commandLine(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::commandLine : new ::commandLine;
   }
   static void *newArray_commandLine(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::commandLine[nElements] : new ::commandLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_commandLine(void *p) {
      delete ((::commandLine*)p);
   }
   static void deleteArray_commandLine(void *p) {
      delete [] ((::commandLine*)p);
   }
   static void destruct_commandLine(void *p) {
      typedef ::commandLine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::commandLine

namespace ROOT {
   // Wrappers around operator new
   static void *new_matchedPair(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::matchedPair : new ::matchedPair;
   }
   static void *newArray_matchedPair(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::matchedPair[nElements] : new ::matchedPair[nElements];
   }
   // Wrapper around operator delete
   static void delete_matchedPair(void *p) {
      delete ((::matchedPair*)p);
   }
   static void deleteArray_matchedPair(void *p) {
      delete [] ((::matchedPair*)p);
   }
   static void destruct_matchedPair(void *p) {
      typedef ::matchedPair current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::matchedPair

namespace ROOT {
   // Wrappers around operator new
   static void *new_ptThing(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ptThing : new ::ptThing;
   }
   static void *newArray_ptThing(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ptThing[nElements] : new ::ptThing[nElements];
   }
   // Wrapper around operator delete
   static void delete_ptThing(void *p) {
      delete ((::ptThing*)p);
   }
   static void deleteArray_ptThing(void *p) {
      delete [] ((::ptThing*)p);
   }
   static void destruct_ptThing(void *p) {
      typedef ::ptThing current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ptThing

namespace ROOT {
   // Wrappers around operator new
   static void *new_itreestream(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::itreestream : new ::itreestream;
   }
   static void *newArray_itreestream(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::itreestream[nElements] : new ::itreestream[nElements];
   }
   // Wrapper around operator delete
   static void delete_itreestream(void *p) {
      delete ((::itreestream*)p);
   }
   static void deleteArray_itreestream(void *p) {
      delete [] ((::itreestream*)p);
   }
   static void destruct_itreestream(void *p) {
      typedef ::itreestream current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::itreestream

namespace ROOT {
   // Wrappers around operator new
   static void *new_otreestream(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::otreestream : new ::otreestream;
   }
   static void *newArray_otreestream(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::otreestream[nElements] : new ::otreestream[nElements];
   }
   // Wrapper around operator delete
   static void delete_otreestream(void *p) {
      delete ((::otreestream*)p);
   }
   static void deleteArray_otreestream(void *p) {
      delete [] ((::otreestream*)p);
   }
   static void destruct_otreestream(void *p) {
      typedef ::otreestream current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::otreestream

namespace ROOT {
   // Wrappers around operator new
   static void *new_eventBuffer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::eventBuffer : new ::eventBuffer;
   }
   static void *newArray_eventBuffer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::eventBuffer[nElements] : new ::eventBuffer[nElements];
   }
   // Wrapper around operator delete
   static void delete_eventBuffer(void *p) {
      delete ((::eventBuffer*)p);
   }
   static void deleteArray_eventBuffer(void *p) {
      delete [] ((::eventBuffer*)p);
   }
   static void destruct_eventBuffer(void *p) {
      typedef ::eventBuffer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::eventBuffer

/********************************************************
* src/dictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledictionary();

extern "C" void G__set_cpp_environmentdictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/tnm.h");
  G__cpp_reset_tagtabledictionary();
}
#include <new>
extern "C" int G__cpp_dllrevdictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* itreestream */
static int G__dictionary_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream[n];
     } else {
       p = new((void*) gvp) itreestream[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream;
     } else {
       p = new((void*) gvp) itreestream;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) itreestream(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) itreestream(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) itreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) itreestream(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(*(vector<std::string>*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) itreestream(*(vector<std::string>*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(*(vector<std::string>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) itreestream(*(vector<std::string>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(
*(vector<std::string>*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) itreestream(
*(vector<std::string>*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itreestream(*(vector<std::string>*) libp->para[0].ref, *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) itreestream(*(vector<std::string>*) libp->para[0].ref, *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((itreestream*) G__getstructoffset())->good());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((itreestream*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((itreestream*) G__getstructoffset())->present(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*(vector<std::string>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(float*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(long*) G__Longref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(int*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(short*) G__Shortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(bool*) G__Boolref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(unsigned long*) G__ULongref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(unsigned short*) G__UShortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<long>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<int>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<short>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<bool>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<char>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<unsigned long>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<unsigned int>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), *(vector<unsigned short>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((itreestream*) G__getstructoffset())->read((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itreestream*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((itreestream*) G__getstructoffset())->entries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((itreestream*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((itreestream*) G__getstructoffset())->maximum(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((itreestream*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((itreestream*) G__getstructoffset())->title();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((itreestream*) G__getstructoffset())->number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((itreestream*) G__getstructoffset())->filename();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((itreestream*) G__getstructoffset())->filenames();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((itreestream*) G__getstructoffset())->names();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((itreestream*) G__getstructoffset())->vget();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((itreestream*) G__getstructoffset())->get(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const itreestream*) G__getstructoffset())->str();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((itreestream*) G__getstructoffset())->ls(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((itreestream*) G__getstructoffset())->ls();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((itreestream*) G__getstructoffset())->tree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_620_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((itreestream*) G__getstructoffset())->file());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_620_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   itreestream* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new itreestream(*(itreestream*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef itreestream G__Titreestream;
static int G__dictionary_620_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (itreestream*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((itreestream*) (soff+(sizeof(itreestream)*i)))->~G__Titreestream();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (itreestream*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((itreestream*) (soff))->~G__Titreestream();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_620_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itreestream* dest = (itreestream*) G__getstructoffset();
   *dest = *(itreestream*) libp->para[0].ref;
   const itreestream& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* otreestream */
static int G__dictionary_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   otreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream[n];
     } else {
       p = new((void*) gvp) otreestream[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream;
     } else {
       p = new((void*) gvp) otreestream;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_otreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   otreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) otreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) otreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) otreestream(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_otreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   otreestream* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream(
(TFile*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) otreestream(
(TFile*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream(
(TFile*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) otreestream(
(TFile*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new otreestream(
(TFile*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) otreestream(
(TFile*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_otreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((otreestream*) G__getstructoffset())->good());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((otreestream*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(double*) G__Doubleref(&libp->para[1])
, (char) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(float*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(long*) G__Longref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(int*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(short*) G__Shortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(char*) G__Charref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(bool*) G__Boolref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(unsigned long*) G__ULongref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(unsigned short*) G__UShortref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<double>*) libp->para[1].ref
, (char) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<long>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<int>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<short>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<char>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<bool>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<unsigned long>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<unsigned int>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])), *(vector<unsigned short>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->add(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->insert(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->store();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->save();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((otreestream*) G__getstructoffset())->commit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((otreestream*) G__getstructoffset())->autosave((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((otreestream*) G__getstructoffset())->autosave();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((otreestream*) G__getstructoffset())->close((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((otreestream*) G__getstructoffset())->close();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((otreestream*) G__getstructoffset())->entries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((otreestream*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((otreestream*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((otreestream*) G__getstructoffset())->title();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((otreestream*) G__getstructoffset())->names();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const otreestream*) G__getstructoffset())->str();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((otreestream*) G__getstructoffset())->ls(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((otreestream*) G__getstructoffset())->ls();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((otreestream*) G__getstructoffset())->file());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_631_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((otreestream*) G__getstructoffset())->tree());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_631_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   otreestream* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new otreestream(*(otreestream*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_otreestream));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef otreestream G__Totreestream;
static int G__dictionary_631_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (otreestream*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((otreestream*) (soff+(sizeof(otreestream)*i)))->~G__Totreestream();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (otreestream*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((otreestream*) (soff))->~G__Totreestream();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_631_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   otreestream* dest = (otreestream*) G__getstructoffset();
   *dest = *(otreestream*) libp->para[0].ref;
   const otreestream& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* eventBuffer */
static int G__dictionary_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->fillObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->saveObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eventBuffer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new eventBuffer[n];
     } else {
       p = new((void*) gvp) eventBuffer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new eventBuffer;
     } else {
       p = new((void*) gvp) eventBuffer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_eventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eventBuffer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new eventBuffer(*(itreestream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) eventBuffer(*(itreestream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_eventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eventBuffer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new eventBuffer(*(otreestream*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) eventBuffer(*(otreestream*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_eventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->initBuffers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->read((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->select(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->ls();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((eventBuffer*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_636_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eventBuffer*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_636_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   eventBuffer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new eventBuffer(*(eventBuffer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_eventBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef eventBuffer G__TeventBuffer;
static int G__dictionary_636_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (eventBuffer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((eventBuffer*) (soff+(sizeof(eventBuffer)*i)))->~G__TeventBuffer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (eventBuffer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((eventBuffer*) (soff))->~G__TeventBuffer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_636_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eventBuffer* dest = (eventBuffer*) G__getstructoffset();
   *dest = *(eventBuffer*) libp->para[0].ref;
   const eventBuffer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* outputFile */
static int G__dictionary_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   outputFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new outputFile(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) outputFile(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_outputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   outputFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new outputFile(
*((string*) G__int(libp->para[0])), *(eventBuffer*) libp->para[1].ref
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) outputFile(
*((string*) G__int(libp->para[0])), *(eventBuffer*) libp->para[1].ref
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new outputFile(*((string*) G__int(libp->para[0])), *(eventBuffer*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) outputFile(*((string*) G__int(libp->para[0])), *(eventBuffer*) libp->para[1].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_outputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((outputFile*) G__getstructoffset())->write((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((outputFile*) G__getstructoffset())->write();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((outputFile*) G__getstructoffset())->count(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((outputFile*) G__getstructoffset())->count(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((outputFile*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   outputFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new outputFile(*(outputFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_outputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef outputFile G__ToutputFile;
static int G__dictionary_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (outputFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((outputFile*) (soff+(sizeof(outputFile)*i)))->~G__ToutputFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (outputFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((outputFile*) (soff))->~G__ToutputFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   outputFile* dest = (outputFile*) G__getstructoffset();
   *dest = *(outputFile*) libp->para[0].ref;
   const outputFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* commandLine */
static int G__dictionary_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   commandLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new commandLine[n];
     } else {
       p = new((void*) gvp) commandLine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new commandLine;
     } else {
       p = new((void*) gvp) commandLine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_commandLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   commandLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new commandLine((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) commandLine((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_commandLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((commandLine*) G__getstructoffset())->decode((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   commandLine* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new commandLine(*(commandLine*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_commandLine));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef commandLine G__TcommandLine;
static int G__dictionary_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (commandLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((commandLine*) (soff+(sizeof(commandLine)*i)))->~G__TcommandLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (commandLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((commandLine*) (soff))->~G__TcommandLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   commandLine* dest = (commandLine*) G__getstructoffset();
   *dest = *(commandLine*) libp->para[0].ref;
   const commandLine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* matchedPair */
static int G__dictionary_646_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const matchedPair*) G__getstructoffset())->operator<(*(matchedPair*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__dictionary_646_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   matchedPair *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new matchedPair[n];
     } else {
       p = new((void*) gvp) matchedPair[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new matchedPair;
     } else {
       p = new((void*) gvp) matchedPair;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_matchedPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__dictionary_646_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   matchedPair* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new matchedPair(*(matchedPair*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_matchedPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef matchedPair G__TmatchedPair;
static int G__dictionary_646_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (matchedPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((matchedPair*) (soff+(sizeof(matchedPair)*i)))->~G__TmatchedPair();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (matchedPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((matchedPair*) (soff))->~G__TmatchedPair();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__dictionary_646_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   matchedPair* dest = (matchedPair*) G__getstructoffset();
   *dest = *(matchedPair*) libp->para[0].ref;
   const matchedPair& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ptThing */
static int G__dictionary_647_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ptThing* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ptThing[n];
     } else {
       p = new((void*) gvp) ptThing[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ptThing;
     } else {
       p = new((void*) gvp) ptThing;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_ptThing));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_647_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ptThing* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ptThing(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *((string*) G__int(libp->para[5])));
     } else {
       p = new((void*) gvp) ptThing(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *((string*) G__int(libp->para[5])));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ptThing(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) ptThing(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_ptThing));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_647_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ptThing* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ptThing(*(ptThing*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) ptThing(*(ptThing*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictionaryLN_ptThing));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_647_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ptThing& obj = ((ptThing*) G__getstructoffset())->operator=(*(ptThing*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_647_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ptThing*) G__getstructoffset())->deltaR(*(ptThing*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_647_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((ptThing*) G__getstructoffset())->matches(*(ptThing*) libp->para[0].ref, (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ptThing*) G__getstructoffset())->matches(*(ptThing*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary_647_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ptThing*) G__getstructoffset())->operator<(*(ptThing*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ptThing G__TptThing;
static int G__dictionary_647_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ptThing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ptThing*) (soff+(sizeof(ptThing)*i)))->~G__TptThing();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ptThing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ptThing*) (soff))->~G__TptThing();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__dictionary__0_2514(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      error(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2515(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = strip(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2516(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = split(*((string*) G__int(libp->para[0])));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2517(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = change(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2518(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = nameonly(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2519(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = shell(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2520(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = fileNames(*((string*) G__int(libp->para[0])));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2521(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) deltaPhi((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2522(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) deltaR((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2523(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      setStyle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dictionary__0_2524(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = particleName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* itreestream */

/* otreestream */

/* eventBuffer */

/* outputFile */

/* commandLine */

/* matchedPair */

/* ptThing */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdictionary {
 public:
  G__Sizep2memfuncdictionary(): p(&G__Sizep2memfuncdictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdictionary::*p)();
};

size_t G__get_sizep2memfuncdictionary()
{
  G__Sizep2memfuncdictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedictionary() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledictionary() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__dictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__dictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Field>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Field>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Field>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Field,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Field*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Field*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Field*>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Field*,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TChain*>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlETChainmUcOallocatorlETChainmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlETChainmUcOallocatorlETChainmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int*>",117,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEintmUcOallocatorlEintmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictionaryLN_reverse_iteratorlEvectorlEintmUcOallocatorlEintmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<int> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<int> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> >,less<string> >",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* itreestream */
static void G__setup_memvaritreestream(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   { itreestream *p; p=(itreestream*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TTree),-1,-1,4,"_tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TChain),-1,-1,4,"_chain=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_statuscode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_current=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_entries=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_buffer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR),G__defined_typename("Data"),-1,4,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR),G__defined_typename("SelectedData"),-1,4,"selecteddata=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_bufoffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_bufcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,int>"),-1,4,"_bufmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"branchname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"branchtab=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"filepath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR),G__defined_typename("vector<TChain*>"),-1,4,"_chainlist=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_delete=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* otreestream */
static void G__setup_memvarotreestream(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_otreestream));
   { otreestream *p; p=(otreestream*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TFile),-1,-1,4,"_file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TTree),-1,-1,4,"_tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_statuscode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_entries=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_idatabuf=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_databuf=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_autosavecount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR),G__defined_typename("SelectedData"),-1,4,"selecteddata=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"branchname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR),G__defined_typename("vector<int*>"),-1,4,"strsize=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eventBuffer */
static void G__setup_memvareventBuffer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_eventBuffer));
   { eventBuffer *p; p=(eventBuffer*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->BeamSpot_x0)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamSpot_x0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamSpot_y0)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamSpot_y0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamSpot_z0)-(long)(p)),100,0,0,-1,-1,-1,1,"BeamSpot_z0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->indexmap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<int> >"),-1,1,"indexmap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->input)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_itreestream),-1,-1,1,"input=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->output)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_otreestream),-1,-1,1,"output=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* outputFile */
static void G__setup_memvaroutputFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_outputFile));
   { outputFile *p; p=(outputFile*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->filename_)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,1,"filename_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->file_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TFile),-1,-1,1,"file_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TTree),-1,-1,1,"tree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hist_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TH1F),-1,-1,1,"hist_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_weight_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_TBranch),-1,-1,1,"b_weight_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->weight_)-(long)(p)),100,0,0,-1,-1,-1,1,"weight_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->entry_)-(long)(p)),105,0,0,-1,-1,-1,1,"entry_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SAVECOUNT_)-(long)(p)),105,0,0,-1,-1,-1,1,"SAVECOUNT_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ev_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__dictionaryLN_eventBuffer),-1,-1,1,"ev_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* commandLine */
static void G__setup_memvarcommandLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_commandLine));
   { commandLine *p; p=(commandLine*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->progname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,1,"progname=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->filelist)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,1,"filelist=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outputfilename)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,1,"outputfilename=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* matchedPair */
static void G__setup_memvarmatchedPair(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_matchedPair));
   { matchedPair *p; p=(matchedPair*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),105,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),105,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->distance)-(long)(p)),100,0,0,-1,-1,-1,1,"distance=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ptThing */
static void G__setup_memvarptThing(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictionaryLN_ptThing));
   { ptThing *p; p=(ptThing*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->index)-(long)(p)),105,0,0,-1,-1,-1,1,"index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_string),-1,-1,1,"name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->var)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__dictionaryLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,1,"var=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncitreestream(void) {
   /* itreestream */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_itreestream));
   G__memfunc_setup("itreestream",1189,G__dictionary_620_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("itreestream",1189,G__dictionary_620_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - filename i - - 0 '1000' bufsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("itreestream",1189,G__dictionary_620_0_3, 105, G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - filename u 'string' - 0 - treename "
"i - - 0 '1000' bufsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("itreestream",1189,G__dictionary_620_0_4, 105, G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - filenames i - - 0 '1000' bufsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("itreestream",1189,G__dictionary_620_0_5, 105, G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - filenames u 'string' - 0 - treename "
"i - - 0 '1000' bufsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__dictionary_620_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("good",425,G__dictionary_620_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__dictionary_620_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("present",769,G__dictionary_620_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - namen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - namen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen d - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen f - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen l - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen i - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen s - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen g - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen k - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen h - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen r - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'string' - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<double,allocator<double> >' 'vector<double>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<float,allocator<float> >' 'vector<float>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<long,allocator<long> >' 'vector<long>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<int,allocator<int> >' 'vector<int>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<short,allocator<short> >' 'vector<short>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<char,allocator<char> >' 'vector<char>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_620_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__dictionary_620_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__dictionary_620_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("entries",762,G__dictionary_620_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dictionary_620_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maximum",766,G__dictionary_620_0_36, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__dictionary_620_0_37, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("title",546,G__dictionary_620_0_38, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("number",649,G__dictionary_620_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("filename",833,G__dictionary_620_0_40, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("filenames",948,G__dictionary_620_0_41, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("names",532,G__dictionary_620_0_42, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vget",438,G__dictionary_620_0_43, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__dictionary_620_0_44, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - namen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("str",345,G__dictionary_620_0_45, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,G__dictionary_620_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tree",432,G__dictionary_620_0_47, 85, G__get_linked_tagnum(&G__dictionaryLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("file",416,G__dictionary_620_0_48, 85, G__get_linked_tagnum(&G__dictionaryLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_open",529,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - filenames u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - treenames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_getbranches",1253,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TBranch' - 0 - branch i - - 0 - depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_getleaf",823,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TBranch' - 0 - branch U 'TLeaf' - 0 '0' leaf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_select",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"u 'string' - 0 - name Y - - 0 - address "
"i - - 0 - maxsize c - - 0 - srctype "
"g - - 0 'false' isvector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_update",738,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("itreestream", 1189, G__dictionary_620_0_54, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 0, 1, 1, 1, 0, "u 'itreestream' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~itreestream", 1315, G__dictionary_620_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_620_0_56, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_itreestream), -1, 1, 1, 1, 1, 0, "u 'itreestream' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncotreestream(void) {
   /* otreestream */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_otreestream));
   G__memfunc_setup("otreestream",1195,G__dictionary_631_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_otreestream), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("otreestream",1195,G__dictionary_631_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_otreestream), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - filename u 'string' - 0 - treename "
"u 'string' - 0 - treetitle i - - 0 '2' complevel "
"i - - 0 '1000' bufsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("otreestream",1195,G__dictionary_631_0_3, 105, G__get_linked_tagnum(&G__dictionaryLN_otreestream), -1, 0, 5, 1, 1, 0, 
"U 'TFile' - 0 - file u 'string' - 0 - treename "
"u 'string' - 0 - treetitle i - - 0 '2' complevel "
"i - - 0 '1000' bufsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("good",425,G__dictionary_631_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__dictionary_631_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - namen d - - 1 - datum "
"c - - 0 ''D'' iotype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen f - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen l - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen i - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen s - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen c - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen g - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen k - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen h - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen r - - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'string' - 1 - datum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<double,allocator<double> >' 'vector<double>' 1 - data "
"c - - 0 ''D'' iotype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<float,allocator<float> >' 'vector<float>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<long,allocator<long> >' 'vector<long>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<int,allocator<int> >' 'vector<int>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<short,allocator<short> >' 'vector<short>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<char,allocator<char> >' 'vector<char>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - namen u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__dictionary_631_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - namen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dictionary_631_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__dictionary_631_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("save",431,G__dictionary_631_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("commit",649,G__dictionary_631_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("autosave",872,G__dictionary_631_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '-1' Mbytes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__dictionary_631_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' closefile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("entries",762,G__dictionary_631_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dictionary_631_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__dictionary_631_0_36, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("title",546,G__dictionary_631_0_37, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("names",532,G__dictionary_631_0_38, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("str",345,G__dictionary_631_0_39, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,G__dictionary_631_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("file",416,G__dictionary_631_0_41, 85, G__get_linked_tagnum(&G__dictionaryLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tree",432,G__dictionary_631_0_42, 85, G__get_linked_tagnum(&G__dictionaryLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_add",392,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"u 'string' - 0 - name Y - - 0 - address "
"i - - 0 - maxsize c - - 0 - srctype "
"c - - 0 - iotype g - - 0 'false' isvector", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("otreestream", 1195, G__dictionary_631_0_44, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_otreestream), -1, 0, 1, 1, 1, 0, "u 'otreestream' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~otreestream", 1321, G__dictionary_631_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_631_0_46, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_otreestream), -1, 1, 1, 1, 1, 0, "u 'otreestream' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunceventBuffer(void) {
   /* eventBuffer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_eventBuffer));
   G__memfunc_setup("fillObjects",1137,G__dictionary_636_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveObjects",1145,G__dictionary_636_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventBuffer",1148,G__dictionary_636_0_3, 105, G__get_linked_tagnum(&G__dictionaryLN_eventBuffer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventBuffer",1148,G__dictionary_636_0_4, 105, G__get_linked_tagnum(&G__dictionaryLN_eventBuffer), -1, 0, 1, 1, 1, 0, "u 'itreestream' - 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventBuffer",1148,G__dictionary_636_0_5, 105, G__get_linked_tagnum(&G__dictionaryLN_eventBuffer), -1, 0, 1, 1, 1, 0, "u 'otreestream' - 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initBuffers",1153,G__dictionary_636_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__dictionary_636_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_636_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - objname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__dictionary_636_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - objname i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,G__dictionary_636_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dictionary_636_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__dictionary_636_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("eventBuffer", 1148, G__dictionary_636_0_13, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_eventBuffer), -1, 0, 1, 1, 1, 0, "u 'eventBuffer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~eventBuffer", 1274, G__dictionary_636_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_636_0_15, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_eventBuffer), -1, 1, 1, 1, 1, 0, "u 'eventBuffer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncoutputFile(void) {
   /* outputFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_outputFile));
   G__memfunc_setup("outputFile",1073,G__dictionary_644_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_outputFile), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputFile",1073,G__dictionary_644_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_outputFile), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - filename u 'eventBuffer' - 1 - ev "
"i - - 0 '50000' savecount", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__dictionary_644_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '1' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__dictionary_644_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - cond d - - 0 '1' w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__dictionary_644_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("outputFile", 1073, G__dictionary_644_0_6, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_outputFile), -1, 0, 1, 1, 1, 0, "u 'outputFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~outputFile", 1199, G__dictionary_644_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_644_0_8, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_outputFile), -1, 1, 1, 1, 1, 0, "u 'outputFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunccommandLine(void) {
   /* commandLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_commandLine));
   G__memfunc_setup("commandLine",1127,G__dictionary_645_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_commandLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("commandLine",1127,G__dictionary_645_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_commandLine), -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("decode",612,G__dictionary_645_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("commandLine", 1127, G__dictionary_645_0_4, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_commandLine), -1, 0, 1, 1, 1, 0, "u 'commandLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~commandLine", 1253, G__dictionary_645_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_645_0_6, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_commandLine), -1, 1, 1, 1, 1, 0, "u 'commandLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmatchedPair(void) {
   /* matchedPair */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_matchedPair));
   G__memfunc_setup("operator<",936,G__dictionary_646_0_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'matchedPair' - 11 - o", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("matchedPair", 1122, G__dictionary_646_0_2, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_matchedPair), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("matchedPair", 1122, G__dictionary_646_0_3, (int) ('i'), G__get_linked_tagnum(&G__dictionaryLN_matchedPair), -1, 0, 1, 1, 1, 0, "u 'matchedPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~matchedPair", 1248, G__dictionary_646_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__dictionary_646_0_5, (int) ('u'), G__get_linked_tagnum(&G__dictionaryLN_matchedPair), -1, 1, 1, 1, 1, 0, "u 'matchedPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncptThing(void) {
   /* ptThing */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictionaryLN_ptThing));
   G__memfunc_setup("ptThing",734,G__dictionary_647_0_1, 105, G__get_linked_tagnum(&G__dictionaryLN_ptThing), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptThing",734,G__dictionary_647_0_2, 105, G__get_linked_tagnum(&G__dictionaryLN_ptThing), -1, 0, 6, 1, 1, 0, 
"i - - 0 - index_ i - - 0 - id_ "
"d - - 0 - pt_ d - - 0 - eta_ "
"d - - 0 - phi_ u 'string' - 0 '\"\"' name_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptThing",734,G__dictionary_647_0_3, 105, G__get_linked_tagnum(&G__dictionaryLN_ptThing), -1, 0, 1, 1, 1, 0, "u 'ptThing' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dictionary_647_0_4, 117, G__get_linked_tagnum(&G__dictionaryLN_ptThing), -1, 1, 1, 1, 1, 0, "u 'ptThing' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deltaR",604,G__dictionary_647_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "u 'ptThing' - 1 - thing", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("matches",741,G__dictionary_647_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'ptThing' - 1 - thing d - - 0 '0.4' drcut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__dictionary_647_0_7, 103, -1, -1, 0, 1, 1, 1, 8, "u 'ptThing' - 11 - o", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ptThing", 860, G__dictionary_647_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
   G__memfunc_setup("error", 554, G__dictionary__0_2514, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - message", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("strip", 562, G__dictionary__0_2515, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - line", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("split", 556, G__dictionary__0_2516, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - str", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("change", 614, G__dictionary__0_2517, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - str u 'string' - 0 - oldstr "
"u 'string' - 0 - newstr", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("nameonly", 867, G__dictionary__0_2518, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("shell", 536, G__dictionary__0_2519, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - cmd", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("fileNames", 916, G__dictionary__0_2520, 117, G__get_linked_tagnum(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - filelist", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("deltaPhi", 811, G__dictionary__0_2521, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi1 d - - 0 - phi2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("deltaR", 604, G__dictionary__0_2522, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - eta1 d - - 0 - phi1 "
"d - - 0 - eta2 d - - 0 - phi2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("setStyle", 861, G__dictionary__0_2523, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("particleName", 1237, G__dictionary__0_2524, 117, G__get_linked_tagnum(&G__dictionaryLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - pdgid", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictionaryLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TLeaf = { "TLeaf" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR = { "map<string,Field,less<string>,allocator<pair<const string,Field> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR = { "map<string,Field*,less<string>,allocator<pair<const string,Field*> > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_itreestream = { "itreestream" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR = { "vector<TChain*,allocator<TChain*> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlETChainmUcOallocatorlETChainmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TChain*,allocator<TChain*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_otreestream = { "otreestream" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR = { "vector<int*,allocator<int*> >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_reverse_iteratorlEvectorlEintmUcOallocatorlEintmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int*,allocator<int*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_eventBuffer = { "eventBuffer" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__dictionaryLN_outputFile = { "outputFile" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_commandLine = { "commandLine" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_matchedPair = { "matchedPair" , 115 , -1 };
G__linked_taginfo G__dictionaryLN_ptThing = { "ptThing" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledictionary() {
  G__dictionaryLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__dictionaryLN_string.tagnum = -1 ;
  G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__dictionaryLN_TFile.tagnum = -1 ;
  G__dictionaryLN_TTree.tagnum = -1 ;
  G__dictionaryLN_TLeaf.tagnum = -1 ;
  G__dictionaryLN_TBranch.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__dictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__dictionaryLN_TH1F.tagnum = -1 ;
  G__dictionaryLN_TChain.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_itreestream.tagnum = -1 ;
  G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlETChainmUcOallocatorlETChainmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_otreestream.tagnum = -1 ;
  G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR.tagnum = -1 ;
  G__dictionaryLN_reverse_iteratorlEvectorlEintmUcOallocatorlEintmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictionaryLN_eventBuffer.tagnum = -1 ;
  G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictionaryLN_outputFile.tagnum = -1 ;
  G__dictionaryLN_commandLine.tagnum = -1 ;
  G__dictionaryLN_matchedPair.tagnum = -1 ;
  G__dictionaryLN_ptThing.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEcharcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_string);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TFile);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TTree);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TLeaf);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TBranch);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TH1F);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_TChain);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOFieldcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOFieldmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOFieldmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_itreestream),sizeof(itreestream),-1,34048,(char*)NULL,G__setup_memvaritreestream,G__setup_memfuncitreestream);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlETChainmUcOallocatorlETChainmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlETChainmUcOallocatorlETChainmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_otreestream),sizeof(otreestream),-1,34048,(char*)NULL,G__setup_memvarotreestream,G__setup_memfuncotreestream);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_vectorlEintmUcOallocatorlEintmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_reverse_iteratorlEvectorlEintmUcOallocatorlEintmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_eventBuffer),sizeof(eventBuffer),-1,33024,(char*)NULL,G__setup_memvareventBuffer,G__setup_memfunceventBuffer);
   G__get_linked_tagnum_fwd(&G__dictionaryLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_outputFile),sizeof(outputFile),-1,32768,(char*)NULL,G__setup_memvaroutputFile,G__setup_memfuncoutputFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_commandLine),sizeof(commandLine),-1,34048,(char*)NULL,G__setup_memvarcommandLine,G__setup_memfunccommandLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_matchedPair),sizeof(matchedPair),-1,0,(char*)NULL,G__setup_memvarmatchedPair,G__setup_memfuncmatchedPair);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictionaryLN_ptThing),sizeof(ptThing),-1,36608,(char*)NULL,G__setup_memvarptThing,G__setup_memfuncptThing);
}
extern "C" void G__cpp_setupdictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupdictionary()");
  G__set_cpp_environmentdictionary();
  G__cpp_setup_tagtabledictionary();

  G__cpp_setup_inheritancedictionary();

  G__cpp_setup_typetabledictionary();

  G__cpp_setup_memvardictionary();

  G__cpp_setup_memfuncdictionary();
  G__cpp_setup_globaldictionary();
  G__cpp_setup_funcdictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdictionary();
  return;
}
class G__cpp_setup_initdictionary {
  public:
    G__cpp_setup_initdictionary() { G__add_setup_func("dictionary",(G__incsetup)(&G__cpp_setupdictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdictionary() { G__remove_setup_func("dictionary"); }
};
G__cpp_setup_initdictionary G__cpp_setup_initializerdictionary;

